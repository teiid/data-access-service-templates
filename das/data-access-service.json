{
  "kind":"Template",
  "apiVersion":"v1",
  "metadata":{
    "name":"data-access-service",
    "annotations":{
      "iconClass":"icon-datavirt",
      "description":"Data Access Service, integrate data from multiple disparate data sources.",
      "tags":"datavirt,jdv,data,virtualization,integration",
      "version":"1.0.0",
      "openshift.io/display-name":"Data Access Service",
      "template.openshift.io/documentation-url":"http://teiid.org/docs/",
      "template.openshift.io/long-description":"This template provides UI to create a data access services using Teiid Data Virtualization Technology. Combine data from disparte hetrogeneous sources like files, relational databases, cloud sources, webservices etc and expose them as single service",
      "template.openshift.io/provider-display-name":"Red Hat, Inc.",
      "template.openshift.io/support-url":"http://teiid.org/"
    }
  },
  "labels":{
    "template":"data-access-service"
  },
  "message":"A new data access service has been created in your project",
  "parameters":[
    {
      "description":"Namespace for the application. Note: The namespace is required for creating proper RoleBindings. Specifying wrong namespace will prevent cluster from forming. This sould be same as your project name.",
      "name":"NAMESPACE",
      "required":true,
      "value":"myproject"
    },
    {
      "description":"Maximum amount of memory the internal PostgreSQL container can use.",
      "displayName":"Memory Limit (PostgreSQL)",
      "name":"MEMORY_POSTGRESQL_LIMIT",
      "required":true,
      "value":"512Mi"
    },
    {
      "description":"Volume space available for internal PostgreSQL, e.g. 512Mi, 2Gi",
      "displayName":"Volume Capacity",
      "name":"VOLUME_CAPACITY",
      "required":true,
      "value":"1Gi"
    },
    {
      "description":"Maximum amount of memory the Virtualization Engine Container can use.",
      "displayName":"Memory Limit",
      "name":"MEMORY_KOMODO_LIMIT",
      "required":true,
      "value":"1024Mi"
    },    
    {
      "description":"Maximum amount of memory the BeETLe container can use.",
      "displayName":"Memory Limit",
      "name":"MEMORY_BEETLE_LIMIT",
      "required":true,
      "value":"512Mi"
    },
    {
      "description":"A secret string used to configure the Generic webhook.",
      "displayName":"Generic Webhook Secret",
      "from":"[a-zA-Z0-9]{40}",
      "generate":"expression",
      "name":"GENERIC_WEBHOOK_SECRET"
    }
  ],
  "objects":[
    {
      "apiVersion":"v1",
      "kind":"ServiceAccount",
      "metadata":{
        "name":"das",
        "annotations":{
          "serviceaccounts.openshift.io/oauth-redirectreference.primary":"{\"kind\":\"OAuthRedirectReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"Route\",\"name\":\"das\"}}"
        }
      }
    },
    {
      "kind": "RoleBinding",
      "apiVersion": "v1",
      "metadata": {
          "name": "das_admin"
      },
      "groupNames": null,
      "subjects": [
          {
              "kind": "ServiceAccount",
              "name": "das"
          }
      ],
      "roleRef": {
          "name": "admin"
      }
    },    
    {
      "apiVersion":"route.openshift.io/v1",
      "kind":"Route",
      "metadata":{
        "name":"das"
      },
      "spec":{
        "port":{
          "targetPort":8443
        },
        "to":{
          "name":"das",
          "kind":"Service"
        },
        "tls":{
          "termination":"Reencrypt"
        }
      }
    },
    {
      "apiVersion":"v1",
      "kind":"Service",
      "metadata":{
        "name":"das",
        "annotations":{
          "service.alpha.openshift.io/serving-cert-secret-name":"das-tls"
        }
      },
      "spec":{
        "ports":[
          {
            "name":"das",
            "port":443,
            "targetPort":8443
          }
        ],
        "selector":{
          "app":"das"
        }
      }
    },
    {
      "apiVersion":"extensions/v1beta1",
      "kind":"Deployment",
      "metadata":{
        "name":"das"
      },
      "spec":{
        "replicas":1,
        "selector":{
          "matchLabels":{
            "app":"das"
          }
        },
        "template":{
          "metadata":{
            "labels":{
              "app":"das"
            }
          },
          "spec":{
            "serviceAccountName":"das",
            "containers":[
              {
                "name":"oauth-proxy",
                "image":"openshift/oauth-proxy:v1.1.0",
                "imagePullPolicy":"IfNotPresent",
                "ports":[
                  {
                    "containerPort":8443,
                    "name":"public"
                  }
                ],
                "args":[
                  "--https-address=:8443",
                  "--provider=openshift",
                  "--openshift-service-account=das",
                  "--upstream=http://beetle:8080/",
                  "--upstream=http://komodo:8080/vdb-builder/",
                  "--tls-cert=/etc/tls/private/tls.crt",
                  "--tls-key=/etc/tls/private/tls.key",
                  "--cookie-secret=V2lsZDAwZDJXaWxkMDBkMg==",
                  "--pass-access-token=true",
                  "--skip-provider-button=true",
                  "--pass-basic-auth=true",
                  "--pass-user-headers=true",
                  "--pass-host-header=true",
                  "--skip-auth-preflight",
                  "--openshift-ca=/etc/pki/tls/certs/ca-bundle.crt",
                  "--openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                  "--scope=user:info user:check-access role:admin:${NAMESPACE}:!"
                ],
                "volumeMounts":[
                  {
                    "mountPath":"/etc/tls/private",
                    "name":"das-tls"
                  }
                ]
              }
            ],
            "volumes":[
              {
                "name":"das-tls",
                "secret":{
                  "secretName":"das-tls"
                }
              }
            ]
          }
        }
      }
    },
    {
      "kind":"Service",
      "apiVersion":"v1",
      "metadata":{
        "name":"komodo",
        "labels":{
          "application":"komodo"
        },
        "annotations":{
          "description":"Route for Data Virtualization services.",
          "service.alpha.openshift.io/dependencies":"[{\"name\": \"pg-storage\", \"kind\": \"Service\"}]"
        }
      },
      "spec":{
        "ports":[
          {
            "name":"http",
            "port":8080,
            "targetPort":8080
          },
          {
            "name":"admin",
            "port":9990,
            "targetPort":9990
          }
        ],
        "selector":{
          "name":"komodo"
        }
      }
    },
    {
      "apiVersion":"v1",
      "kind":"DeploymentConfig",
      "metadata":{
        "name":"komodo"
      },
      "spec":{
        "replicas":1,
        "selector":{
          "name":"komodo"
        },
        "strategy":{
          "type":"Recreate"
        },
        "template":{
          "metadata":{
            "labels":{
              "name":"komodo"
            }
          },
          "spec":{
            "serviceAccountName":"das",
            "terminationGracePeriodSeconds":120,
            "containers":[
              {
                "capabilities":{

                },
                "name":"komodo",
                "image":" ",
                "imagePullPolicy":"IfNotPresent",
                "livenessProbe": {
                    "httpGet": {
                        "path": "/vdb-builder/api-docs/index.html",
                        "port": 8080
                    },
                    "initialDelaySeconds": 30,
                    "timeoutSeconds": 3,
                    "periodSeconds": 15                    
                },
                "readinessProbe": {
                    "httpGet": {
                        "path": "/vdb-builder/api-docs/index.html",
                        "port": 8080
                    },
                    "initialDelaySeconds": 3,
                    "timeoutSeconds": 3,
                    "periodSeconds": 15
                },
                "resources":{
                  "limits":{
                    "memory":"${MEMORY_KOMODO_LIMIT}"
                  }
                },                                
                "ports":[
                  {
                    "name":"http",
                    "containerPort":8080,
                    "protocol":"TCP"
                  },
                  {
                    "name":"admin",
                    "containerPort":9990,
                    "protocol":"TCP"
                  }
                ],
                "env":[
                  {
                    "name":"OPENSHIFT_KUBE_PING_LABELS",
                    "value":"application=komodo"
                  },
                  {
                    "name":"OPENSHIFT_KUBE_PING_NAMESPACE",
                    "valueFrom":{
                      "fieldRef":{
                        "fieldPath":"metadata.namespace"
                      }
                    }
                  },
                  {
                    "name":"GC_MAX_METASPACE_SIZE",
                    "value":"512"
                  },
                  {
                    "name":"NAMESPACE",
                    "valueFrom":{
                      "fieldRef":{
                        "fieldPath":"metadata.namespace"
                      }
                    }
                  },
                  {
                    "name":"JAVA_OPTIONS",
                    "value":"-DNAMESPACE=${NAMESPACE} -Djava.net.preferIPv4Stack=true -Djava.net.preferIPv4Addresses=true -Dlog4j.logger.org.apache.http=DEBUG -Dkomodo.user=user -Dkomodo.password=password -Dkomodo.connectionUrl=jdbc:postgresql://pg-storage:5432/komododb -Dkomodo.binaryStoreUrl=jdbc:postgresql://pg-storage:5432/komododb -Dkomodo.connectionDriver=org.postgresql.Driver"
                  }
                ]
              }
            ]
          }
        },
        "triggers":[
          {
            "imageChangeParams":{
              "automatic":true,
              "containerNames":[
                "komodo"
              ],
              "from":{
                "kind":"ImageStreamTag",
                "name":"komodo:latest",
                "namespace":"openshift"
              },
              "lastTriggeredImage":""
            },
            "type":"ImageChange"
          },
          {
            "type":"ConfigChange"
          }
        ]
      }
    },
    {
      "apiVersion":"v1",
      "kind":"PersistentVolumeClaim",
      "metadata":{
        "name":"pg-storage"
      },
      "spec":{
        "accessModes":[
          "ReadWriteOnce"
        ],
        "resources":{
          "requests":{
            "storage":"${VOLUME_CAPACITY}"
          }
        }
      }
    },
    {
      "apiVersion":"v1",
      "kind":"Service",
      "metadata":{
        "annotations":{
          "description":"Exposes the Postgres internal database server for storage"
        },
        "name":"pg-storage"
      },
      "spec":{
        "ports":[
          {
            "name":"postgresql",
            "port":5432,
            "targetPort":5432
          }
        ],
        "selector":{
          "name":"pg-storage"
        }
      }
    },
    {
      "apiVersion":"v1",
      "kind":"DeploymentConfig",
      "metadata":{
        "annotations":{
          "description":"Defines how to deploy the PostgreSQL database",
          "template.alpha.openshift.io/wait-for-ready":"true"
        },
        "name":"pg-storage"
      },
      "spec":{
        "replicas":1,
        "selector":{
          "name":"pg-storage"
        },
        "strategy":{
          "type":"Recreate"
        },
        "template":{
          "metadata":{
            "labels":{
              "name":"pg-storage"
            },
            "name":"pg-storage"
          },
          "spec":{
            "containers":[
              {
                "env":[
                  {
                    "name":"POSTGRESQL_USER",
                    "value":"user"
                  },
                  {
                    "name":"POSTGRESQL_PASSWORD",
                    "value":"password"
                  },
                  {
                    "name":"POSTGRESQL_DATABASE",
                    "value":"komododb"
                  },
                  {
                    "name":"POSTGRESQL_MAX_CONNECTIONS",
                    "value":"100"
                  },
                  {
                    "name":"POSTGRESQL_SHARED_BUFFERS",
                    "value":"12MB"
                  }
                ],
                "image":" ",
                "livenessProbe":{
                  "initialDelaySeconds":30,
                  "tcpSocket":{
                    "port":5432
                  },
                  "timeoutSeconds":1
                },
                "name":"postgresql",
                "ports":[
                  {
                    "containerPort":5432
                  }
                ],
                "readinessProbe":{
                  "exec":{
                    "command":[
                      "/bin/sh",
                      "-i",
                      "-c",
                      "psql -h 127.0.0.1 -U user -q -d komododb -c 'SELECT 1'"
                    ]
                  },
                  "initialDelaySeconds":5,
                  "timeoutSeconds":1
                },
                "resources":{
                  "limits":{
                    "memory":"${MEMORY_POSTGRESQL_LIMIT}"
                  }
                },
                "volumeMounts":[
                  {
                    "mountPath":"/var/lib/pgsql/data",
                    "name":"pg-storage-data"
                  }
                ]
              }
            ],
            "volumes":[
              {
                "name":"pg-storage-data",
                "persistentVolumeClaim":{
                  "claimName":"pg-storage"
                }
              }
            ]
          }
        },
        "triggers":[
          {
            "imageChangeParams":{
              "automatic":true,
              "containerNames":[
                "postgresql"
              ],
              "from":{
                "kind":"ImageStreamTag",
                "name":"postgresql:9.5",
                "namespace":"openshift"
              }
            },
            "type":"ImageChange"
          },
          {
            "type":"ConfigChange"
          }
        ]
      }
    },
    {
      "apiVersion":"v1",
      "kind":"Service",
      "metadata":{
        "annotations":{
          "description":"Exposes and load balances the beetle application pods"
        },
        "name":"beetle"
      },
      "spec":{
        "ports":[
          {
            "name":"web",
            "port":8080,
            "targetPort":8080
          }
        ],
        "selector":{
          "name":"beetle"
        }
      }
    },
    {
      "apiVersion":"v1",
      "kind":"DeploymentConfig",
      "metadata":{
        "annotations":{
          "description":"Defines how to deploy the OpenShift server",
          "template.alpha.openshift.io/wait-for-ready":"true"
        },
        "name":"beetle"
      },
      "spec":{
        "replicas":1,
        "selector":{
          "name":"beetle"
        },
        "strategy":{
          "type":"Rolling"
        },
        "template":{
          "metadata":{
            "labels":{
              "name":"beetle"
            },
            "name":"beetle"
          },
          "spec":{
            "containers":[
              {
                "env":[

                ],
                "name":"beetle",
                "image":" ",
                "livenessProbe":{
                  "httpGet":{
                    "path":"/",
                    "port":8080
                  },
                  "initialDelaySeconds":30,
                  "timeoutSeconds":3
                },
                "ports":[
                  {
                    "containerPort":8080
                  }
                ],
                "readinessProbe":{
                  "httpGet":{
                    "path":"/",
                    "port":8080
                  },
                  "initialDelaySeconds":3,
                  "timeoutSeconds":3
                },
                "resources":{
                  "limits":{
                    "memory":"${MEMORY_BEETLE_LIMIT}"
                  }
                }
              }
            ]
          }
        },
        "triggers":[
          {
            "imageChangeParams":{
              "automatic":true,
              "containerNames":[
                "beetle"
              ],
              "from":{
                "kind":"ImageStreamTag",
                "name":"beetle:latest",
                "namespace":"openshift"
              }
            },
            "type":"ImageChange"
          },
          {
            "type":"ConfigChange"
          }
        ]
      }
    }
  ]
}
